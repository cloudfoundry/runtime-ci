#!/bin/bash
set -exu

root_dir="${PWD}"


fail_fast() {
if [ ! -f semantic-version/version ]; then
  exit 1
fi
}

write_aws_config_private() {
  set +x
cat > "release-repo/config/private.yml" <<EOF
---
blobstore:
  provider: s3
  options:
    access_key_id: ${BLOBS_BUCKET_ACCESS_KEY_ID}
    secret_access_key: ${BLOBS_BUCKET_SECRET_KEY}
EOF
  set -x
}

write_gcp_config_private() {
  set +x
cat > "release-repo/config/private.yml" <<EOF
---
blobstore:
  options:
    credentials_source: static
    json_key: |
      ${BLOBS_BUCKET_GCS_JSON_KEY}
EOF
  set -x
}

create_release() {
  local sem_ver=$(cat semantic-version/version)
  pushd release-repo > /dev/null
    git config user.name "ARD WG Bot"
    git config user.email "app-deployments@cloudfoundry.org"

    bosh -n create-release --final --version=$sem_ver

    git add .final_builds releases

    git commit -m "Final release, version $sem_ver."
  popd > /dev/null
}

main() {
  fail_fast

  if [[ -n "${BLOBS_BUCKET_ACCESS_KEY_ID}" ]] && [[ -n "${BLOBS_BUCKET_SECRET_KEY}" ]]; then
    echo "Using AWS credentials"
    write_aws_config_private
  elif [[ -n "${BLOBS_BUCKET_GCS_JSON_KEY}" ]]; then
    echo "Using GCP credentials"
    write_gcp_config_private
  else
    echo "Error: Either BLOBS_BUCKET_ACCESS_KEY_ID and BLOBS_BUCKET_SECRET_KEY or BLOBS_BUCKET_GCS_JSON_KEY must be set."
    exit 1
  fi

  create_release

  git clone release-repo final-release-repo
}

main
