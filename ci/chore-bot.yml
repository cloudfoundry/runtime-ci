---
resources:
- name: chore-bot-source
  type: git
  icon: github
  source:
    branch: main
    uri: git@github.com:pivotal-cf-experimental/relint-trackerbot.git
    private_key: ((relint_trackerbot_read_deploy_key.private_key))

- name: chore-bot-config-and-manifest
  type: git
  icon: github
  source:
    branch: main
    uri: git@github.com:cloudfoundry/relint-team.git
    private_key: ((runtime_ci_private_read_deploy_key.private_key))
    paths:
    - apps/chore_bot

- name: runtime-ci
  type: git
  icon: github
  source:
    branch: main
    uri: https://github.com/cloudfoundry/runtime-ci

jobs:
- name: deploy-chore-bot
  serial: true
  plan:
  - in_parallel:
    - get: chore-bot-source
    - get: chore-bot-config-and-manifest
      trigger: true
    - get: runtime-ci
  - task: unit-tests
    file: runtime-ci/tasks/run-chore-bot-tests/task.yml
  - task: copy-config-to-app-path
    file: runtime-ci/tasks/copy-chore-bot-config/task.yml
    input_mapping:
      chore-bot-config: chore-bot-config-and-manifest
  - task: cf-push
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-for-k8s-ci
      inputs:
      - name: chore-bot-source-with-config
      - name: chore-bot-config-and-manifest
      params:
        CF_DOMAIN: long-lived-sli.cf-for-k8s.relint.rocks
        CF_ORG: team-apps
        APP_NAME: chore-bot
      run:
        path: /bin/bash
        args:
        - -euc
        - |
          cf api "api.${CF_DOMAIN}" --skip-ssl-validation
          cf auth ((ll_dep_cf_user)) ((ll_dep_cf_admin_pass))

          # assuming org and space is created when the foundation is
          cf target -o "${CF_ORG}" -s "${APP_NAME}"

          echo "Pushing ${APP_NAME}"
          cf push ${APP_NAME} -p chore-bot-source-with-config -f chore-bot-config-and-manifest/apps/chore_bot/manifest.yml | grep -v "value:"
