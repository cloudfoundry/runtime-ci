groups:
- name: cf-deployment-concourse-tasks
  jobs:
  - build-cf-deployment-concourse-tasks-docker-image
- name: runtime-ci-common-images
  jobs:
  - build-relint-base-docker-image
  - build-bosh-cli-docker-image

resources:
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: weekly
  type: time
  source:
    start: 7:00 -0700
    stop: 7:30 -0700
    interval: 168h

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    private_key: ((cfdct_readwrite_deploy_key.private_key))
    paths: [dockerfiles/cf-deployment-concourse-tasks/Dockerfile]
- name: uptimer
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/uptimer.git

- name: runtime-ci-relint-base
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
    paths: [dockerfiles/relint-base/Dockerfile]

- name: runtime-ci-bosh-cli
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
    paths: [dockerfiles/bosh-cli/Dockerfile]

- name: cf-cli
  type: github-release
  source:
    user: cloudfoundry
    repository: cli
    access_token: ((release_integration_download_bot_access_token))

- name: credhub-cli-github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: credhub-cli
    access_token: ((release_integration_download_bot_access_token))

- name: bosh-cli-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-cli
    access_token: ((release_integration_download_bot_access_token))

- name: terraform-github-release
  type: github-release
  source:
    user: hashicorp
    repository: terraform
    access_token: ((release_integration_download_bot_access_token))

- name: bbl-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-bootloader
    access_token: ((release_integration_download_bot_access_token))

- name: golang-1-11
  type: docker-image
  source:
    repository: golang
    tag: 1.11

- name: cf-deployment-concourse-tasks-pipeline-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    email: cf-release-integration+dockerhub-push-bot@pivotal.io

- name: relint-base-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/relint-base
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    email: cf-release-integration+dockerhub-push-bot@pivotal.io

- name: bosh-cli-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/bosh-cli
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    email: cf-release-integration+dockerhub-push-bot@pivotal.io

- name: ubuntu-bionic-image
  type: docker-image
  source:
    repository: ubuntu
    tag: bionic

jobs:
- name: build-cf-deployment-concourse-tasks-docker-image
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: weekly
        trigger: true
      - get: uptimer
        trigger: true
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: terraform-github-release
        trigger: true
      - get: bbl-github-release
        trigger: true
      - get: bosh-cli-github-release
        trigger: true
      - get: credhub-cli-github-release
        trigger: true
      - get: cf-cli
        trigger: true
      - get: ubuntu-bionic-image
        trigger: true
      - get: golang-1-11
        trigger: true
    - task: update-dockerfile-versions
      file: runtime-ci/tasks/update-cf-d-ct-dockerfile-versions/task.yml
      input_mapping:
        golang-docker-image: golang-1-11
    - put: cf-deployment-concourse-tasks-pipeline-image
      params:
        build: cf-deployment-concourse-tasks-updated/dockerfiles/cf-deployment-concourse-tasks
        push: true
    - put: cf-deployment-concourse-tasks
      params:
        repository: cf-deployment-concourse-tasks-updated
        rebase: true
    - task: create-pm-story
      file: runtime-ci/tasks/create-pm-story/task.yml
      input_mapping:
        input-description: version-json
      params:
        TRACKER_STORY_NAME: "New cf-deployment-concourse-tasks docker image"
        TRACKER_STORY_STATE: delivered
        TRACKER_API_TOKEN: ((cf_relint_tracker_api_token))
        DESCRIPTION_FILE: version.json

- name: build-relint-base-docker-image
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: weekly
        trigger: true
      - get: runtime-ci-relint-base
        trigger: true
    - put: relint-base-image
      params:
        build: runtime-ci-relint-base/dockerfiles/relint-base/
        push: true

- name: build-bosh-cli-docker-image
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: weekly
        trigger: true
      - get: runtime-ci
      - get: runtime-ci-bosh-cli
        trigger: true
      - get: relint-base-image
        trigger: true
        passed: [build-relint-base-docker-image]
      - get: bosh-cli-github-release
        trigger: true
      - get: bbl-github-release
        trigger: true
      - get: terraform-github-release
        trigger: true
    - task: create-bosh-cli-json
      file: runtime-ci/tasks/create-version-json/task.yml
      input_mapping:
        version: bosh-cli-github-release
        # This is an example of that chaining we spoke of earlier
        input-version-json: bosh-cli-github-release
      params:
        key: bosh_cli_version
    - task: create-bbl-json
      file: runtime-ci/tasks/create-version-json/task.yml
      input_mapping:
        version: bbl-github-release
        # This is an example of that chaining we spoke of earlier
        input-version-json: version-json
      params:
        key: bbl_version
    - task: create-terraform-json
      file: runtime-ci/tasks/create-version-json/task.yml
      input_mapping:
        version: terraform-github-release
        # This is an example of that chaining we spoke of earlier
        input-version-json: version-json
      params:
        key: terraform_version
    - put: bosh-cli-image
      params:
        build: runtime-ci-bosh-cli/dockerfiles/bosh-cli/
        push: true
        build_args_file: version-json/version.json
