---
groups:
- name: fresh/luna
  jobs:
  - add-claimed-lock-fresh
  - setup-infrastructure-fresh
  - update-infrastructure-fresh
  - destroy-infrastructure-fresh
  - remove-claimed-lock-fresh

- name: upgrade/trelawney
  jobs:
  - add-claimed-lock-upgrade
  - setup-infrastructure-upgrade
  - update-infrastructure-upgrade
  - destroy-infrastructure-upgrade
  - remove-claimed-lock-upgrade

- name: experimental/hermione
  jobs:
  - add-claimed-lock-experimental
  - setup-infrastructure-experimental
  - update-infrastructure-experimental
  - destroy-infrastructure-experimental
  - remove-claimed-lock-experimental

- name: bbr
  jobs:
  - add-claimed-lock-bbr
  - setup-infrastructure-bbr
  - update-infrastructure-bbr
  - destroy-infrastructure-bbr
  - remove-claimed-lock-bbr

- name: lite/snitch
  jobs:
  - add-claimed-lock-lite
  - setup-infrastructure-lite
  - destroy-infrastructure-lite
  - update-infrastructure-lite
  - remove-claimed-lock-lite

- name: stable/bellatrix
  jobs:
  - add-claimed-lock-stable
  - setup-infrastructure-stable
  - update-infrastructure-stable
  - destroy-infrastructure-stable
  - remove-claimed-lock-stable

- name: dev
  jobs:
  - setup-infrastructure-maxime
  - destroy-infrastructure-maxime

fresh-bbl-up-task: &fresh-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-config: bosh-bootloader
    bbl-state: relint-envs
  params:
    BBL_CONFIG_DIR: plan-patches/iso-segs-gcp
    BBL_ENV_NAME: luna-fresh
    # This is us-west1 because the bbl isoseg patch has us-west1 hardcoded
    BBL_GCP_REGION: us-west1
    BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/luna/google_account_creds.json
    BBL_IAAS: gcp
    BBL_LB_CERT: ((luna_cf_lb_cert.certificate))
    BBL_LB_KEY: ((luna_cf_lb_cert.private_key))
    BBL_STATE_DIR: environments/test/luna/bbl-state
    LB_DOMAIN: luna.cf-app.com
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

upgrade-bbl-up-task: &upgrade-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-config: relint-envs
    bbl-state: relint-envs
  params:
    BBL_CONFIG_DIR: environments/test/trelawney/bbl-config
    BBL_ENV_NAME: trelawney-upgrade
    BBL_GCP_REGION: us-central1
    BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/trelawney/google_account_creds.json
    BBL_IAAS: gcp
    BBL_LB_CERT: ((trelawney_cf_lb_cert.certificate))
    BBL_LB_KEY: ((trelawney_cf_lb_cert.private_key))
    BBL_STATE_DIR: environments/test/trelawney/bbl-state
    LB_DOMAIN: trelawney.cf-app.com
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

experimental-bbl-up-task: &experimental-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-config: relint-envs
    bbl-state: relint-envs
  params:
    BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
    BBL_AWS_REGION: us-west-2
    BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
    BBL_CONFIG_DIR: environments/test/hermione/bbl-config
    BBL_ENV_NAME: hermione-experimental
    BBL_IAAS: aws
    BBL_LB_CERT: ((hermione_lbs_certificate))
    BBL_LB_CERT_CHAIN: ((relint_ca.certificate))
    BBL_LB_KEY: ((hermione_lbs_private_key))
    BBL_STATE_DIR: environments/test/hermione/bbl-state
    LB_DOMAIN: hermione.cf-app.com
    TRUSTED_CA: ((relint_ca.certificate))
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

bbr-bbl-up-task: &bbr-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-state: relint-envs
    bbl-config: bosh-bootloader
  params:
    BBL_STATE_DIR: environments/test/bbr/bbl-state
    BBL_IAAS: gcp
    BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/bbr/google_account_creds.json
    BBL_GCP_REGION: us-central1
    BBL_LB_CERT: ((baba_yaga_cf_lb_cert.certificate))
    BBL_LB_KEY: ((baba_yaga_cf_lb_cert.private_key))
    LB_DOMAIN: baba-yaga.cf-app.com
    BBL_ENV_NAME: baba-yaga-bbr
    BBL_CONFIG_DIR: plan-patches/network-lb-gcp
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

lite-bbl-up-task: &lite-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-config: combined-inputs
    bbl-state: relint-envs
  params:
    BBL_CONFIG_DIR: .
    BBL_ENV_NAME: snitch-lite
    BBL_GCP_REGION: us-central1
    BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/snitch/google_account_creds.json
    BBL_IAAS: gcp
    BBL_STATE_DIR: environments/test/snitch/bbl-state
    SKIP_LB_CREATION: true
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

stable-bbl-up-task: &stable-bbl-up-task-config
  file: cf-deployment-concourse-tasks/bbl-up/task.yml
  input_mapping:
    bbl-config: combined-plan-patches
    bbl-state: relint-envs
  params:
    BBL_CONFIG_DIR: .
    BBL_ENV_NAME: bellatrix-stable
    BBL_GCP_REGION: us-central1
    BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/bellatrix/google_account_creds.json
    BBL_IAAS: gcp
    BBL_LB_CERT: ((bellatrix_cf_lb_cert.certificate))
    BBL_LB_KEY: ((bellatrix_cf_lb_cert.private_key))
    BBL_STATE_DIR: environments/test/bellatrix/bbl-state
    LB_DOMAIN: bellatrix.cf-app.com
  ensure:
    put: relint-envs
    params:
      repository: updated-bbl-state
      rebase: true

resources:
# Pools
- name: fresh-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: lite-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: upgrade-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: stable-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: experimental-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/experimental
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: bbr-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: bbr
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

# Plan patches
- name: bosh-bootloader
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader

# Code repos
- name: cf-deployment-concourse-tasks
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: relint-envs
  type: git
  icon: github
  source:
    branch: master
    uri: git@github.com:cloudfoundry/relint-envs.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

# Time
- name: every-tuesday-morning
  type: time
  icon: clock-outline
  source:
    start: 4:20
    stop: 4:50
    interval: 24h
    days: [ Tuesday ]
    location: America/Los_Angeles

- name: every-day
  type: time
  icon: clock-outline
  source:
    start: 4:20
    stop: 4:50
    interval: 24h
    location: America/Los_Angeles

jobs:
# Add claimed locks
- name: add-claimed-lock-fresh
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {add_claimed: fresh-pool}

- name: add-claimed-lock-upgrade
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {add_claimed: upgrade-pool}

- name: add-claimed-lock-experimental
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: experimental-pool
  - put: experimental-pool
    params: {add_claimed: experimental-pool}

- name: add-claimed-lock-bbr
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: baba-yaga
    output_mapping:
      pool-resource: bbr-pool
  - put: bbr-pool
    params: {add_claimed: bbr-pool}

- name: add-claimed-lock-lite
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {add_claimed: lite-pool}

- name: add-claimed-lock-stable
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {add_claimed: stable-pool}

# Setup infrastructure
- name: setup-infrastructure-fresh
  serial: true
  public: true
  plan:
  - get: fresh-pool
    trigger: true
    passed: [ add-claimed-lock-fresh ]
  - in_parallel:
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
  - task: setup-infrastructure
    <<: *fresh-bbl-up-task-config
  - put: fresh-pool
    params: {release: fresh-pool}

- name: setup-infrastructure-upgrade
  serial: true
  public: true
  plan:
  - get: upgrade-pool
    trigger: true
    passed: [add-claimed-lock-upgrade]
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: relint-envs
    - get: runtime-ci
  - task: setup-infrastructure
    <<: *upgrade-bbl-up-task-config
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: setup-infrastructure-experimental
  serial_groups: [hermione]
  public: true
  plan:
  - get: experimental-pool
    trigger: true
    passed: [ add-claimed-lock-experimental ]
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: relint-envs
  - task: setup-infrastructure
    <<: *experimental-bbl-up-task-config
  - put: experimental-pool
    params: {release: experimental-pool}

- name: setup-infrastructure-bbr
  serial_groups: [bbr]
  public: true
  plan:
  - get: bbr-pool
    trigger: true
    passed: [add-claimed-lock-bbr]
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: relint-envs
    - get: bosh-bootloader
  - task: setup-infrastructure
    <<: *bbr-bbl-up-task-config
  - put: bbr-pool
    params: {release: bbr-pool}

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  plan:
  - get: lite-pool
    trigger: true
    passed: [ add-claimed-lock-lite ]
  - in_parallel:
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
    - get: runtime-ci
  - task: combine-bbl-configs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: bosh-bootloader
      second-input: relint-envs
    params:
      FIRST_DIR: plan-patches/bosh-lite-gcp
      SECOND_DIR: environments/test/snitch/bbl-config
  - task: setup-infrastructure
    <<: *lite-bbl-up-task-config
  - put: lite-pool
    params: {release: lite-pool}

- name: setup-infrastructure-stable
  serial: true
  public: true
  plan:
  - get: stable-pool
    trigger: true
    passed: [ add-claimed-lock-stable ]
  - in_parallel:
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: bosh-bootloader
  - task: combine-bbl-plan-patches
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: relint-envs
      second-input: bosh-bootloader
    params:
      FIRST_DIR: environments/test/bellatrix/bbl-config
      SECOND_DIR: plan-patches/network-lb-gcp
    output_mapping:
      combined-inputs: combined-plan-patches
  - task: setup-infrastructure
    <<: *stable-bbl-up-task-config
  - put: stable-pool
    params: {release: stable-pool}

- name: setup-infrastructure-maxime
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_STATE_DIR: environments/dev/maxime/bbl-state
      BBL_IAAS: gcp
      BBL_ENV_NAME: maxime
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/dev/maxime/google_account_creds.json
      # This is us-west1 because the bbl isoseg patch has us-west1 hardcoded
      BBL_GCP_REGION: us-west1
      BBL_LB_CERT: ((maxime_cf_lb_cert.certificate))
      BBL_LB_KEY: ((maxime_cf_lb_cert.private_key))
      LB_DOMAIN: maxime.cf-app.com
    input_mapping:
      bbl-state: relint-envs
      bbl-config: bosh-bootloader
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

# Update infrastructure
- name: update-infrastructure-fresh
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: fresh-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      <<: *fresh-bbl-up-task-config
    - put: fresh-pool
      params: {release: fresh-pool}

- name: update-infrastructure-upgrade
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: upgrade-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
      - get: runtime-ci
    - task: update-infrastructure
      <<: *upgrade-bbl-up-task-config
    - put: upgrade-pool
      params: {release: upgrade-pool}

- name: update-infrastructure-experimental
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: experimental-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      <<: *experimental-bbl-up-task-config
    - put: experimental-pool
      params: {release: experimental-pool}

- name: update-infrastructure-bbr
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: bbr-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      <<: *bbr-bbl-up-task-config
    - put: bbr-pool
      params: {release: bbr-pool}

- name: update-infrastructure-lite
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: lite-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: runtime-ci
      - get: every-tuesday-morning
        trigger: true
    - task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
    - task: combine-bbl-configs
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: bosh-bootloader
        second-input: relint-envs
      params:
        FIRST_DIR: plan-patches/bosh-lite-gcp
        SECOND_DIR: environments/test/snitch/bbl-config
    - task: update-infrastructure
      <<: *lite-bbl-up-task-config
    - put: lite-pool
      params: {release: lite-pool}

- name: update-infrastructure-stable
  serial: true
  public: true
  plan:
  - timeout: 12h
    do:
    - in_parallel:
      - put: stable-pool
        params: {acquire: true}
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
      - get: runtime-ci
      - get: bosh-bootloader
    - task: combine-bbl-plan-patches
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: relint-envs
        second-input: bosh-bootloader
      params:
        FIRST_DIR: environments/test/bellatrix/bbl-config
        SECOND_DIR: plan-patches/network-lb-gcp
      output_mapping:
        combined-inputs: combined-plan-patches
    - task: update-infrastructure
      <<: *stable-bbl-up-task-config
    - put: stable-pool
      params: {release: stable-pool}

# Destroy infrastructure
- name: destroy-infrastructure-fresh
  serial: true
  public: true
  plan:
  - in_parallel:
    - put: fresh-pool
      params: {claim: luna}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/luna/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/luna/google_account_creds.json
      BBL_STATE_DIR: environments/test/luna/bbl-state
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-upgrade
  serial: true
  public: true
  plan:
  - in_parallel:
    - put: upgrade-pool
      params: {claim: trelawney}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/trelawney/google_account_creds.json
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-experimental
  serial_groups: [hermione]
  public: true
  plan:
  - in_parallel:
    - put: experimental-pool
      params: {claim: hermione}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
    input_mapping:
      bbl-state: relint-envs
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-bbr
  serial_groups: [bbr]
  public: true
  plan:
  - in_parallel:
    - put: bbr-pool
      params: {claim: baba-yaga}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/bbr/google_account_creds.json
      BBL_STATE_DIR: environments/test/bbr/bbl-state
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  plan:
  - in_parallel:
    - put: lite-pool
      params: {claim: snitch}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/snitch/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/snitch/google_account_creds.json
      BBL_STATE_DIR: environments/test/snitch/bbl-state
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-stable
  serial: true
  public: true
  plan:
  - in_parallel:
    - put: stable-pool
      params: {claim: bellatrix}
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/bellatrix/google_account_creds.json
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
    ensure:
      put: relint-envs
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-maxime
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: every-day
      trigger: true
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/dev/maxime/bbl-state
      - task: destroy-infrastructure
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/dev/maxime/google_account_creds.json
          BBL_STATE_DIR: environments/dev/maxime/bbl-state
        ensure:
          put: relint-envs
          params:
            repository: updated-bbl-state
            rebase: true

# Remove claimed locks
- name: remove-claimed-lock-fresh
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: fresh-pool
    passed: [ destroy-infrastructure-fresh ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {remove: fresh-pool}

- name: remove-claimed-lock-upgrade
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: upgrade-pool
    passed: [ destroy-infrastructure-upgrade ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {remove: upgrade-pool}

- name: remove-claimed-lock-experimental
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: experimental-pool
    passed: [ destroy-infrastructure-experimental ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: experimental-pool
  - put: experimental-pool
    params: {remove: experimental-pool}

- name: remove-claimed-lock-bbr
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: bbr-pool
    passed: [destroy-infrastructure-bbr]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: baba-yaga
    output_mapping:
      pool-resource: bbr-pool
  - put: bbr-pool
    params: {remove: bbr-pool}

- name: remove-claimed-lock-lite
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: lite-pool
    passed: [ destroy-infrastructure-lite ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {remove: lite-pool}

- name: remove-claimed-lock-stable
  serial: true
  public: true
  plan:
  - get: runtime-ci
  - get: stable-pool
    passed: [ destroy-infrastructure-stable ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {remove: stable-pool}
