## ======================================================================
## GENERATED FILE. DO NOT EDIT
## ======================================================================

---
## ======================================================================
##   __ _ _ __ ___  _   _ _ __  ___
##  / _` | '__/ _ \| | | | '_ \/ __|
## | (_| | | | (_) | |_| | |_) \__ \
##  \__, |_|  \___/ \__,_| .__/|___/
##  |___/                |_|
## ======================================================================

groups:
- name: update-base-stemcells-and-releases
  jobs:
  - update-stemcell-and-recompile-releases
  - update-binary-buildpack
  - update-bosh-dns-aliases
  - update-bpm
  - update-capi
  - update-cf-mysql
  - update-cf-networking
  - update-cf-smoke-tests
  - update-cf-syslog-drain
  - update-cflinuxfs2
  - update-cflinuxfs3
  - update-diego
  - update-dotnet-core-buildpack
  - update-garden-runc
  - update-go-buildpack
  - update-java-buildpack
  - update-log-cache
  - update-loggregator
  - update-loggregator-agent
  - update-nats
  - update-nodejs-buildpack
  - update-php-buildpack
  - update-python-buildpack
  - update-routing
  - update-ruby-buildpack
  - update-silk
  - update-staticfile-buildpack
  - update-statsd-injector
  - update-uaa
  - update-credhub
  - update-cf-cli
- name: update-ops-releases
  jobs:
  - update-backup-and-restore-sdk
  - update-bits-service
  - update-cf-app-sd
  - update-haproxy
  - update-mapfs
  - update-nfs-volume
  - update-smb-volume
  - update-postgres
  - update-syslog
  - update-pxc
  - update-windows-syslog
  - update-hwc-buildpack
  - update-windows-utilities
  - update-garden-windows
  - update-winc
  - update-windows2016fs
  - update-node-exporter
- name: update-windows-stemcells-and-releases
  jobs:
  - update-windows2012R2-stemcell
  - update-windows2016-stemcell
  - update-windows1803-stemcell
  - update-windows-2016-offline-releases

- name: infrastructure
  jobs:
  - setup-infrastructure-compilation
  - destroy-infrastructure-compilation
  - run-bosh-cleanup-compilation

## ======================================================================
##                                           _
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  | |_ _   _ _ __   ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \ | __| | | | '_ \ / _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/ | |_| |_| | |_) |  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___|  \__|\__, | .__/ \___||___/
##                                               |___/|_|
## ======================================================================

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: greengrass-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/greengrass-env.git
    private_key: ((greengrass_env_readwrite_deploy_key.private_key))
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
- name: windows2016fs-offline-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: windows2016fs-release
    access_token: ((release_integration_download_bot_access_token))
- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release
- name: bosh-dns-aliases-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-dns-aliases-release
- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bpm-release
- name: capi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/capi-release
- name: cf-mysql-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release
- name: cf-networking-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-networking-release
- name: cf-smoke-tests-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-smoke-tests-release
- name: cf-syslog-drain-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-syslog-drain-release
- name: cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: cflinuxfs3-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs3-release
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release
- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release
- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release
- name: log-cache-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/log-cache-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator-release
- name: loggregator-agent-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator-agent-release
- name: nats-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nats-release
- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release
- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release
- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release
- name: routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release
- name: silk-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/silk-release
- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release
- name: statsd-injector-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/statsd-injector-release
- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release
- name: credhub-release
  type: bosh-io-release
  source:
    repository: pivotal-cf/credhub-release
- name: cf-cli-release
  type: bosh-io-release
  source:
    repository: bosh-packages/cf-cli-release
- name: backup-and-restore-sdk-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/backup-and-restore-sdk-release
- name: bits-service-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bits-service-release
- name: cf-app-sd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-app-sd-release
- name: haproxy-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/haproxy-boshrelease
- name: mapfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/mapfs-release
- name: nfs-volume-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nfs-volume-release
- name: smb-volume-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/smb-volume-release
- name: postgres-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
- name: syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/syslog-release
- name: pxc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/pxc-release
- name: windows-syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/windows-syslog-release
- name: hwc-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/hwc-buildpack-release
- name: windows-utilities-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows-utilities-release
- name: garden-windows-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-windows-bosh-release
- name: winc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/winc-release
- name: windows2016fs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows2016fs-online-release
- name: node-exporter-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/node-exporter-boshrelease
- name: binary-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: binary-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: bosh-dns-aliases-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: bosh-dns-aliases-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: bpm-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: bpm-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: capi-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: capi-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-mysql-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-mysql-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-networking-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-networking-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-smoke-tests-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-smoke-tests-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-syslog-drain-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-syslog-drain-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cflinuxfs2-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cflinuxfs2-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cflinuxfs3-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cflinuxfs3-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: diego-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: diego-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: dotnet-core-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: dotnet-core-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: garden-runc-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: garden-runc-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: go-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: go-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: java-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: java-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: log-cache-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: log-cache-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: loggregator-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: loggregator-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: loggregator-agent-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: loggregator-agent-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: nats-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: nats-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: nodejs-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: nodejs-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: php-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: php-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: python-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: python-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: routing-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: routing-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: ruby-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: ruby-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: silk-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: silk-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: staticfile-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: staticfile-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: statsd-injector-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: statsd-injector-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: uaa-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: uaa-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: credhub-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: credhub-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-cli-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-cli-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: windows2012R2-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2012R2-go_agent
- name: windows2016-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2016-go_agent
- name: windows1803-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows1803-go_agent
- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h

## ======================================================================
##    _       _
##   (_) ___ | |__  ___
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/
## ======================================================================

jobs:
- name: update-binary-buildpack
  serial_groups:
  - update-binary-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: binary-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-binary-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: binary-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: binary-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: binary-buildpack
  - task: update-additional-ops-files-binary-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: binary-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: binary-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: binary-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: binary-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: binary-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-bosh-dns-aliases
  serial_groups:
  - update-bosh-dns-aliases
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bosh-dns-aliases-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bosh-dns-aliases
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: bosh-dns-aliases-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns-aliases
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: bosh-dns-aliases
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bosh-dns-aliases
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: bosh-dns-aliases
  - task: update-additional-ops-files-bosh-dns-aliases
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: bosh-dns-aliases-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns-aliases
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: bosh-dns-aliases-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: bosh-dns-aliases
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: bosh-dns-aliases-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-bpm
  serial_groups:
  - update-bpm
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bpm-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bpm
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: bpm-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: bpm
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: bpm
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bpm
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: bpm
  - task: update-additional-ops-files-bpm
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: bpm-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bpm
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: bpm-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: bpm
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: bpm-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-capi
  serial_groups:
  - update-capi
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: capi-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-capi
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: capi-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: capi
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: capi
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-capi
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: capi
  - task: update-additional-ops-files-capi
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: capi-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: capi
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: capi-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: capi
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: capi-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-mysql
  serial_groups:
  - update-cf-mysql
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-mysql
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cf-mysql-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cf-mysql
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-mysql
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-mysql
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-mysql
  - task: update-additional-ops-files-cf-mysql
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-mysql-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-mysql
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cf-mysql-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-mysql
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cf-mysql-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-networking
  serial_groups:
  - update-cf-networking
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-networking-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-networking
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cf-networking-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cf-networking
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-networking
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-networking
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-networking
  - task: update-additional-ops-files-cf-networking
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-networking-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-networking
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cf-networking-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-networking
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cf-networking-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-smoke-tests
  serial_groups:
  - update-cf-smoke-tests
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-smoke-tests-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-smoke-tests
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cf-smoke-tests-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cf-smoke-tests
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-smoke-tests
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-smoke-tests
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-smoke-tests
  - task: update-additional-ops-files-cf-smoke-tests
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-smoke-tests-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-smoke-tests
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cf-smoke-tests-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-smoke-tests
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cf-smoke-tests-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-syslog-drain
  serial_groups:
  - update-cf-syslog-drain
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-syslog-drain-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-syslog-drain
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cf-syslog-drain-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cf-syslog-drain
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-syslog-drain
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-syslog-drain
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-syslog-drain
  - task: update-additional-ops-files-cf-syslog-drain
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-syslog-drain-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-syslog-drain
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cf-syslog-drain-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-syslog-drain
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cf-syslog-drain-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cflinuxfs2
  serial_groups:
  - update-cflinuxfs2
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cflinuxfs2-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cflinuxfs2
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cflinuxfs2-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cflinuxfs2
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cflinuxfs2
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cflinuxfs2
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cflinuxfs2
  - task: update-additional-ops-files-cflinuxfs2
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cflinuxfs2-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cflinuxfs2
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cflinuxfs2-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cflinuxfs2
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cflinuxfs2-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cflinuxfs3
  serial_groups:
  - update-cflinuxfs3
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cflinuxfs3-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cflinuxfs3
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cflinuxfs3-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cflinuxfs3
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cflinuxfs3
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cflinuxfs3
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cflinuxfs3
  - task: update-additional-ops-files-cflinuxfs3
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cflinuxfs3-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cflinuxfs3
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cflinuxfs3-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cflinuxfs3
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cflinuxfs3-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-diego
  serial_groups:
  - update-diego
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-diego
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: diego-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: diego
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: diego
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-diego
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: diego
  - task: update-additional-ops-files-diego
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: diego-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: diego
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: diego-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: diego
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: diego-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-dotnet-core-buildpack
  serial_groups:
  - update-dotnet-core-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: dotnet-core-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-dotnet-core-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: dotnet-core-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: dotnet-core-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: dotnet-core-buildpack
  - task: update-additional-ops-files-dotnet-core-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: dotnet-core-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: dotnet-core-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: dotnet-core-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: dotnet-core-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: dotnet-core-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-garden-runc
  serial_groups:
  - update-garden-runc
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: garden-runc-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-garden-runc
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: garden-runc-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: garden-runc
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: garden-runc
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-garden-runc
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: garden-runc
  - task: update-additional-ops-files-garden-runc
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: garden-runc-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: garden-runc
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: garden-runc-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: garden-runc
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: garden-runc-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-go-buildpack
  serial_groups:
  - update-go-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: go-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-go-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: go-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: go-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: go-buildpack
  - task: update-additional-ops-files-go-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: go-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: go-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: go-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: go-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: go-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-java-buildpack
  serial_groups:
  - update-java-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: java-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-java-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: java-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: java-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: java-buildpack
  - task: update-additional-ops-files-java-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: java-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: java-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: java-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: java-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: java-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-log-cache
  serial_groups:
  - update-log-cache
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: log-cache-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-log-cache
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: log-cache-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: log-cache
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: log-cache
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-log-cache
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: log-cache
  - task: update-additional-ops-files-log-cache
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: log-cache-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: log-cache
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: log-cache-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: log-cache
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: log-cache-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-loggregator
  serial_groups:
  - update-loggregator
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-loggregator
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: loggregator-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: loggregator
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: loggregator
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-loggregator
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: loggregator
  - task: update-additional-ops-files-loggregator
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: loggregator-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: loggregator
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: loggregator-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: loggregator
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: loggregator-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-loggregator-agent
  serial_groups:
  - update-loggregator-agent
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: loggregator-agent-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-loggregator-agent
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: loggregator-agent-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: loggregator-agent
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: loggregator-agent
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-loggregator-agent
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: loggregator-agent
  - task: update-additional-ops-files-loggregator-agent
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: loggregator-agent-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: loggregator-agent
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: loggregator-agent-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: loggregator-agent
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: loggregator-agent-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-nats
  serial_groups:
  - update-nats
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nats-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nats
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: nats-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: nats
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: nats
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-nats
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: nats
  - task: update-additional-ops-files-nats
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: nats-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nats
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: nats-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nats
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: nats-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-nodejs-buildpack
  serial_groups:
  - update-nodejs-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nodejs-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nodejs-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: nodejs-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: nodejs-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: nodejs-buildpack
  - task: update-additional-ops-files-nodejs-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: nodejs-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nodejs-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: nodejs-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nodejs-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: nodejs-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-php-buildpack
  serial_groups:
  - update-php-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: php-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-php-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: php-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: php-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: php-buildpack
  - task: update-additional-ops-files-php-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: php-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: php-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: php-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: php-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: php-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-python-buildpack
  serial_groups:
  - update-python-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: python-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-python-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: python-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: python-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: python-buildpack
  - task: update-additional-ops-files-python-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: python-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: python-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: python-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: python-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: python-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-routing
  serial_groups:
  - update-routing
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-routing
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: routing-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: routing
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: routing
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-routing
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: routing
  - task: update-additional-ops-files-routing
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: routing-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: routing
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: routing-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: routing
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: routing-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-ruby-buildpack
  serial_groups:
  - update-ruby-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: ruby-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-ruby-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: ruby-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: ruby-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: ruby-buildpack
  - task: update-additional-ops-files-ruby-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: ruby-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: ruby-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: ruby-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: ruby-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: ruby-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-silk
  serial_groups:
  - update-silk
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: silk-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-silk
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: silk-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: silk
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: silk
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-silk
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: silk
  - task: update-additional-ops-files-silk
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: silk-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: silk
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: silk-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: silk
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: silk-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-staticfile-buildpack
  serial_groups:
  - update-staticfile-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: staticfile-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-staticfile-buildpack
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: staticfile-buildpack-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: staticfile-buildpack
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: staticfile-buildpack
  - task: update-additional-ops-files-staticfile-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: staticfile-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: staticfile-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: staticfile-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: staticfile-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: staticfile-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-statsd-injector
  serial_groups:
  - update-statsd-injector
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: statsd-injector-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-statsd-injector
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: statsd-injector-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: statsd-injector
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: statsd-injector
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-statsd-injector
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: statsd-injector
  - task: update-additional-ops-files-statsd-injector
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: statsd-injector-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: statsd-injector
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: statsd-injector-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: statsd-injector
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: statsd-injector-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-uaa
  serial_groups:
  - update-uaa
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-uaa
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: uaa-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: uaa
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: uaa
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-uaa
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: uaa
  - task: update-additional-ops-files-uaa
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: uaa-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: uaa
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: uaa-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: uaa
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: uaa-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-credhub
  serial_groups:
  - update-credhub
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: credhub-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-credhub
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: credhub-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: credhub
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: credhub
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-credhub
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: credhub
  - task: update-additional-ops-files-credhub
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: credhub-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: credhub
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: credhub-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: credhub
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: credhub-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-cli
  serial_groups:
  - update-cf-cli
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-cli-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-cli
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: cf-cli-release
      deployment-configuration: cf-deployment-develop
    params:
      RELEASE_NAME: cf-cli
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-cli
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-cli
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-cli
  - task: update-additional-ops-files-cf-cli
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-cli-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-cli
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: cf-cli-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-cli
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
  - task: combine-inputs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: updated-compiled-releases-ops-file
      second-input: updated-ops-file
  - put: cf-cli-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: combined-inputs
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-backup-and-restore-sdk
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: backup-and-restore-sdk-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-backup-and-restore-sdk
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: backup-and-restore-sdk-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: backup-and-restore-sdk
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-backup-and-restore-sdk
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: backup-and-restore-sdk
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-backup-and-restore-sdk
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-bits-service
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bits-service-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bits-service
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: bits-service-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bits-service
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-bits-service
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: bits-service
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-bits-service
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-cf-app-sd
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-app-sd-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-app-sd
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: cf-app-sd-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-app-sd
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-cf-app-sd
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-app-sd
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-cf-app-sd
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-haproxy
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: haproxy-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-haproxy
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: haproxy-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: haproxy
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-haproxy
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: haproxy
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: vars-files/haproxy-vars.yml
  - task: commit-generated-manifest-and-ops-haproxy
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-mapfs
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: mapfs-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-mapfs
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: mapfs-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: mapfs
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-mapfs
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: mapfs
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-mapfs
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-nfs-volume
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nfs-volume-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nfs-volume
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: nfs-volume-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nfs-volume
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-nfs-volume
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: nfs-volume
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-nfs-volume
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-smb-volume
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: smb-volume-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-smb-volume
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: smb-volume-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: smb-volume
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-smb-volume
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: smb-volume
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-smb-volume
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-postgres
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: postgres-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-postgres
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: postgres-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: postgres
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-postgres
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: postgres
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-postgres
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-syslog
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: syslog-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-syslog
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: syslog-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: syslog
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-syslog
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: cf-deployment-develop

    params:
      DEPLOYMENT_NAME_SUFFIX: syslog
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: operations/addons/example-vars-files/vars-enable-component-syslog.yml
  - task: commit-generated-manifest-and-ops-syslog
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-pxc
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: pxc-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-pxc
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: pxc-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: pxc
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-pxc
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: pxc
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-pxc
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows-syslog
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: windows-syslog-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-windows-syslog
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: windows-syslog-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: windows-syslog
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-windows-syslog
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: windows-syslog
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: vars-files/windows-enable-component-syslog-vars.yml
  - task: commit-generated-manifest-and-ops-windows-syslog
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-hwc-buildpack
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-hwc-buildpack
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: hwc-buildpack-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: hwc-buildpack
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-hwc-buildpack
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: hwc-buildpack
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-hwc-buildpack
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows-utilities
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: windows-utilities-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-windows-utilities
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: windows-utilities-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: windows-utilities
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-windows-utilities
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows-utilities
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-windows-utilities
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-garden-windows
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: garden-windows-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-garden-windows
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: garden-windows-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: garden-windows
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-garden-windows
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: garden-windows
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-garden-windows
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-winc
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: winc-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-winc
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: winc-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: winc
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-winc
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: winc
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-winc
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows2016fs
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: windows2016fs-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-windows2016fs
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: windows2016fs-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: windows2016fs
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-windows2016fs
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows2016fs
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-windows2016fs
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-node-exporter
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: node-exporter-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-node-exporter
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      release: node-exporter-release
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: node-exporter
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
      OPS_FILES: |
        operations/windows2012R2-cell.yml
        operations/windows2016-cell.yml
        operations/experimental/windows1803-cell.yml
  - task: bosh-dry-run-node-exporter
    file: runtime-ci/tasks/bosh-dry-run-with-all-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: node-exporter
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: commit-generated-manifest-and-ops-node-exporter
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      COMMIT_ALL_OPS_FILES: true
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows2012R2-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: windows2012R2-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      windows-stemcell: windows2012R2-stemcell
    params:
      ORIGINAL_WINDOWS_OPS_FILE_PATH: operations/windows2012R2-cell.yml
      UPDATED_WINDOWS_OPS_FILE_PATH: windows2012R2-cell.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows2012R2-cell.yml
      OPS_FILE_DESTINATION: operations/windows2012R2-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows2016-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: windows2016-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      windows-stemcell: windows2016-stemcell
    params:
      ORIGINAL_WINDOWS_OPS_FILE_PATH: operations/windows2016-cell.yml
      UPDATED_WINDOWS_OPS_FILE_PATH: windows2016-cell.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows2016-cell.yml
      OPS_FILE_DESTINATION: operations/windows2016-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
- name: update-windows1803-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: windows1803-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      windows-stemcell: windows1803-stemcell
    params:
      ORIGINAL_WINDOWS_OPS_FILE_PATH: operations/experimental/windows1803-cell.yml
      UPDATED_WINDOWS_OPS_FILE_PATH: windows1803-cell.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows1803-cell.yml
      OPS_FILE_DESTINATION: operations/experimental/windows1803-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-stemcell-and-recompile-releases
  public: true
  serial_groups:
  - update-binary-buildpack
  - update-bosh-dns-aliases
  - update-bpm
  - update-capi
  - update-cf-mysql
  - update-cf-networking
  - update-cf-smoke-tests
  - update-cf-syslog-drain
  - update-cflinuxfs2
  - update-cflinuxfs3
  - update-diego
  - update-dotnet-core-buildpack
  - update-garden-runc
  - update-go-buildpack
  - update-java-buildpack
  - update-log-cache
  - update-loggregator
  - update-loggregator-agent
  - update-nats
  - update-nodejs-buildpack
  - update-php-buildpack
  - update-python-buildpack
  - update-routing
  - update-ruby-buildpack
  - update-silk
  - update-staticfile-buildpack
  - update-statsd-injector
  - update-uaa
  - update-credhub
  - update-cf-cli
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: binary-buildpack-release
      params:
        tarball: false
    - get: bosh-dns-aliases-release
      params:
        tarball: false
    - get: bpm-release
      params:
        tarball: false
    - get: capi-release
      params:
        tarball: false
    - get: cf-mysql-release
      params:
        tarball: false
    - get: cf-networking-release
      params:
        tarball: false
    - get: cf-smoke-tests-release
      params:
        tarball: false
    - get: cf-syslog-drain-release
      params:
        tarball: false
    - get: cflinuxfs2-release
      params:
        tarball: false
    - get: cflinuxfs3-release
      params:
        tarball: false
    - get: diego-release
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      params:
        tarball: false
    - get: garden-runc-release
      params:
        tarball: false
    - get: go-buildpack-release
      params:
        tarball: false
    - get: java-buildpack-release
      params:
        tarball: false
    - get: log-cache-release
      params:
        tarball: false
    - get: loggregator-release
      params:
        tarball: false
    - get: loggregator-agent-release
      params:
        tarball: false
    - get: nats-release
      params:
        tarball: false
    - get: nodejs-buildpack-release
      params:
        tarball: false
    - get: php-buildpack-release
      params:
        tarball: false
    - get: python-buildpack-release
      params:
        tarball: false
    - get: routing-release
      params:
        tarball: false
    - get: ruby-buildpack-release
      params:
        tarball: false
    - get: silk-release
      params:
        tarball: false
    - get: staticfile-buildpack-release
      params:
        tarball: false
    - get: statsd-injector-release
      params:
        tarball: false
    - get: uaa-release
      params:
        tarball: false
    - get: credhub-release
      params:
        tarball: false
    - get: cf-cli-release
      params:
        tarball: false
    - get: stemcell
      trigger: true
      params:
        tarball: false
  - task: update-stemcell-manifest-section
    file: runtime-ci/tasks/update-stemcell-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: upload-updated-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
    params:
      INFRASTRUCTURE: google
  - aggregate:
    - task: compile-release-binary-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-binary-buildpack
      params:
        RELEASE_NAME: binary-buildpack
    - task: compile-release-bosh-dns-aliases
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-bosh-dns-aliases
      params:
        RELEASE_NAME: bosh-dns-aliases
    - task: compile-release-bpm
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-bpm
      params:
        RELEASE_NAME: bpm
    - task: compile-release-capi
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-capi
      params:
        RELEASE_NAME: capi
    - task: compile-release-cf-mysql
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-mysql
      params:
        RELEASE_NAME: cf-mysql
    - task: compile-release-cf-networking
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-networking
      params:
        RELEASE_NAME: cf-networking
    - task: compile-release-cf-smoke-tests
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-smoke-tests
      params:
        RELEASE_NAME: cf-smoke-tests
    - task: compile-release-cf-syslog-drain
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-syslog-drain
      params:
        RELEASE_NAME: cf-syslog-drain
    - task: compile-release-cflinuxfs2
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cflinuxfs2
      params:
        RELEASE_NAME: cflinuxfs2
    - task: compile-release-cflinuxfs3
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cflinuxfs3
      params:
        RELEASE_NAME: cflinuxfs3
    - task: compile-release-diego
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-diego
      params:
        RELEASE_NAME: diego
    - task: compile-release-dotnet-core-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-dotnet-core-buildpack
      params:
        RELEASE_NAME: dotnet-core-buildpack
    - task: compile-release-garden-runc
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-garden-runc
      params:
        RELEASE_NAME: garden-runc
    - task: compile-release-go-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-go-buildpack
      params:
        RELEASE_NAME: go-buildpack
    - task: compile-release-java-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-java-buildpack
      params:
        RELEASE_NAME: java-buildpack
    - task: compile-release-log-cache
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-log-cache
      params:
        RELEASE_NAME: log-cache
    - task: compile-release-loggregator
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-loggregator
      params:
        RELEASE_NAME: loggregator
    - task: compile-release-loggregator-agent
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-loggregator-agent
      params:
        RELEASE_NAME: loggregator-agent
    - task: compile-release-nats
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nats
      params:
        RELEASE_NAME: nats
    - task: compile-release-nodejs-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nodejs-buildpack
      params:
        RELEASE_NAME: nodejs-buildpack
    - task: compile-release-php-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-php-buildpack
      params:
        RELEASE_NAME: php-buildpack
    - task: compile-release-python-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-python-buildpack
      params:
        RELEASE_NAME: python-buildpack
    - task: compile-release-routing
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-routing
      params:
        RELEASE_NAME: routing
    - task: compile-release-ruby-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-ruby-buildpack
      params:
        RELEASE_NAME: ruby-buildpack
    - task: compile-release-silk
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-silk
      params:
        RELEASE_NAME: silk
    - task: compile-release-staticfile-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-staticfile-buildpack
      params:
        RELEASE_NAME: staticfile-buildpack
    - task: compile-release-statsd-injector
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-statsd-injector
      params:
        RELEASE_NAME: statsd-injector
    - task: compile-release-uaa
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-uaa
      params:
        RELEASE_NAME: uaa
    - task: compile-release-credhub
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-credhub
      params:
        RELEASE_NAME: credhub
    - task: compile-release-cf-cli
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-cli
      params:
        RELEASE_NAME: cf-cli
  - task: update-compiled-releases-ops-binary-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: cf-deployment-develop
      release: binary-buildpack-release
      compiled-release-tarball: exported-release-binary-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: binary-buildpack
      ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-bosh-dns-aliases
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: bosh-dns-aliases-release
      compiled-release-tarball: exported-release-bosh-dns-aliases
      current-commit-message: commit-message
    params:
      RELEASE_NAME: bosh-dns-aliases
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-bpm
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: bpm-release
      compiled-release-tarball: exported-release-bpm
      current-commit-message: commit-message
    params:
      RELEASE_NAME: bpm
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-capi
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: capi-release
      compiled-release-tarball: exported-release-capi
      current-commit-message: commit-message
    params:
      RELEASE_NAME: capi
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cf-mysql
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cf-mysql-release
      compiled-release-tarball: exported-release-cf-mysql
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-mysql
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cf-networking
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cf-networking-release
      compiled-release-tarball: exported-release-cf-networking
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-networking
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cf-smoke-tests
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cf-smoke-tests-release
      compiled-release-tarball: exported-release-cf-smoke-tests
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-smoke-tests
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cf-syslog-drain
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cf-syslog-drain-release
      compiled-release-tarball: exported-release-cf-syslog-drain
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-syslog-drain
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cflinuxfs2
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cflinuxfs2-release
      compiled-release-tarball: exported-release-cflinuxfs2
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cflinuxfs2
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cflinuxfs3
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cflinuxfs3-release
      compiled-release-tarball: exported-release-cflinuxfs3
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cflinuxfs3
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-diego
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: diego-release
      compiled-release-tarball: exported-release-diego
      current-commit-message: commit-message
    params:
      RELEASE_NAME: diego
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-dotnet-core-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: dotnet-core-buildpack-release
      compiled-release-tarball: exported-release-dotnet-core-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: dotnet-core-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-garden-runc
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: garden-runc-release
      compiled-release-tarball: exported-release-garden-runc
      current-commit-message: commit-message
    params:
      RELEASE_NAME: garden-runc
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-go-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: go-buildpack-release
      compiled-release-tarball: exported-release-go-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: go-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-java-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: java-buildpack-release
      compiled-release-tarball: exported-release-java-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: java-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-log-cache
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: log-cache-release
      compiled-release-tarball: exported-release-log-cache
      current-commit-message: commit-message
    params:
      RELEASE_NAME: log-cache
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-loggregator
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: loggregator-release
      compiled-release-tarball: exported-release-loggregator
      current-commit-message: commit-message
    params:
      RELEASE_NAME: loggregator
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-loggregator-agent
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: loggregator-agent-release
      compiled-release-tarball: exported-release-loggregator-agent
      current-commit-message: commit-message
    params:
      RELEASE_NAME: loggregator-agent
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-nats
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: nats-release
      compiled-release-tarball: exported-release-nats
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nats
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-nodejs-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: nodejs-buildpack-release
      compiled-release-tarball: exported-release-nodejs-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nodejs-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-php-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: php-buildpack-release
      compiled-release-tarball: exported-release-php-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: php-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-python-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: python-buildpack-release
      compiled-release-tarball: exported-release-python-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: python-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-routing
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: routing-release
      compiled-release-tarball: exported-release-routing
      current-commit-message: commit-message
    params:
      RELEASE_NAME: routing
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-ruby-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: ruby-buildpack-release
      compiled-release-tarball: exported-release-ruby-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: ruby-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-silk
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: silk-release
      compiled-release-tarball: exported-release-silk
      current-commit-message: commit-message
    params:
      RELEASE_NAME: silk
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-staticfile-buildpack
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: staticfile-buildpack-release
      compiled-release-tarball: exported-release-staticfile-buildpack
      current-commit-message: commit-message
    params:
      RELEASE_NAME: staticfile-buildpack
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-statsd-injector
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: statsd-injector-release
      compiled-release-tarball: exported-release-statsd-injector
      current-commit-message: commit-message
    params:
      RELEASE_NAME: statsd-injector
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-uaa
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: uaa-release
      compiled-release-tarball: exported-release-uaa
      current-commit-message: commit-message
    params:
      RELEASE_NAME: uaa
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-credhub
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: credhub-release
      compiled-release-tarball: exported-release-credhub
      current-commit-message: commit-message
    params:
      RELEASE_NAME: credhub
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - task: update-compiled-releases-ops-cf-cli
    file: runtime-ci/tasks/update-single-compiled-release/task.yml
    input_mapping:
      original-compiled-releases-ops-file: updated-compiled-releases-ops-file
      release: cf-cli-release
      compiled-release-tarball: exported-release-cf-cli
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-cli
      ORIGINAL_OPS_FILE_PATH: use-compiled-releases.yml
      UPDATED_OPS_FILE_PATH: use-compiled-releases.yml
  - aggregate:
    - put: binary-buildpack-release-gcs
      params:
        file: exported-release-binary-buildpack/*.tgz
        predefined_acl: publicRead
    - put: bosh-dns-aliases-release-gcs
      params:
        file: exported-release-bosh-dns-aliases/*.tgz
        predefined_acl: publicRead
    - put: bpm-release-gcs
      params:
        file: exported-release-bpm/*.tgz
        predefined_acl: publicRead
    - put: capi-release-gcs
      params:
        file: exported-release-capi/*.tgz
        predefined_acl: publicRead
    - put: cf-mysql-release-gcs
      params:
        file: exported-release-cf-mysql/*.tgz
        predefined_acl: publicRead
    - put: cf-networking-release-gcs
      params:
        file: exported-release-cf-networking/*.tgz
        predefined_acl: publicRead
    - put: cf-smoke-tests-release-gcs
      params:
        file: exported-release-cf-smoke-tests/*.tgz
        predefined_acl: publicRead
    - put: cf-syslog-drain-release-gcs
      params:
        file: exported-release-cf-syslog-drain/*.tgz
        predefined_acl: publicRead
    - put: cflinuxfs2-release-gcs
      params:
        file: exported-release-cflinuxfs2/*.tgz
        predefined_acl: publicRead
    - put: cflinuxfs3-release-gcs
      params:
        file: exported-release-cflinuxfs3/*.tgz
        predefined_acl: publicRead
    - put: diego-release-gcs
      params:
        file: exported-release-diego/*.tgz
        predefined_acl: publicRead
    - put: dotnet-core-buildpack-release-gcs
      params:
        file: exported-release-dotnet-core-buildpack/*.tgz
        predefined_acl: publicRead
    - put: garden-runc-release-gcs
      params:
        file: exported-release-garden-runc/*.tgz
        predefined_acl: publicRead
    - put: go-buildpack-release-gcs
      params:
        file: exported-release-go-buildpack/*.tgz
        predefined_acl: publicRead
    - put: java-buildpack-release-gcs
      params:
        file: exported-release-java-buildpack/*.tgz
        predefined_acl: publicRead
    - put: log-cache-release-gcs
      params:
        file: exported-release-log-cache/*.tgz
        predefined_acl: publicRead
    - put: loggregator-release-gcs
      params:
        file: exported-release-loggregator/*.tgz
        predefined_acl: publicRead
    - put: loggregator-agent-release-gcs
      params:
        file: exported-release-loggregator-agent/*.tgz
        predefined_acl: publicRead
    - put: nats-release-gcs
      params:
        file: exported-release-nats/*.tgz
        predefined_acl: publicRead
    - put: nodejs-buildpack-release-gcs
      params:
        file: exported-release-nodejs-buildpack/*.tgz
        predefined_acl: publicRead
    - put: php-buildpack-release-gcs
      params:
        file: exported-release-php-buildpack/*.tgz
        predefined_acl: publicRead
    - put: python-buildpack-release-gcs
      params:
        file: exported-release-python-buildpack/*.tgz
        predefined_acl: publicRead
    - put: routing-release-gcs
      params:
        file: exported-release-routing/*.tgz
        predefined_acl: publicRead
    - put: ruby-buildpack-release-gcs
      params:
        file: exported-release-ruby-buildpack/*.tgz
        predefined_acl: publicRead
    - put: silk-release-gcs
      params:
        file: exported-release-silk/*.tgz
        predefined_acl: publicRead
    - put: staticfile-buildpack-release-gcs
      params:
        file: exported-release-staticfile-buildpack/*.tgz
        predefined_acl: publicRead
    - put: statsd-injector-release-gcs
      params:
        file: exported-release-statsd-injector/*.tgz
        predefined_acl: publicRead
    - put: uaa-release-gcs
      params:
        file: exported-release-uaa/*.tgz
        predefined_acl: publicRead
    - put: credhub-release-gcs
      params:
        file: exported-release-credhub/*.tgz
        predefined_acl: publicRead
    - put: cf-cli-release-gcs
      params:
        file: exported-release-cf-cli/*.tgz
        predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows-2016-offline-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: windows2016fs-offline-release
      trigger: true
      params:
        tarball: false
    - get: windows2016-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      release: windows2016fs-offline-release
    params:
      RELEASE_NAME: windows2016fs
      ORIGINAL_OPS_FILE_PATH: operations/use-offline-windows2016fs.yml
      UPDATED_OPS_FILE_PATH: use-offline-windows2016fs.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_DESTINATION: operations/use-offline-windows2016fs.yml
      OPS_FILE_NAME: use-offline-windows2016fs.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: setup-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: greengrass-env-director-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_CONFIG_DIR: bbl-config
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((greengrass_cf_lb_cert.certificate))
      BBL_LB_KEY: ((greengrass_cf_lb_cert.private_key))
      LB_DOMAIN: greengrass.cf-app.com
      BBL_ENV_NAME: greengrass-compile
    input_mapping:
      bbl-state: greengrass-env-director-state
      bbl-config: greengrass-env-director-state
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: extend-cloud-config-for-credhub-dry-run
    file: runtime-ci/tasks/bosh-extend-cloud-config/task.yml
    input_mapping:
      ops-file: greengrass-env-director-state
      bbl-state: greengrass-env-director-state
    params:
      OPS_FILE_PATH: add-credhub-lb.yml

- name: destroy-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: greengrass-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: run-bosh-cleanup-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: greengrass-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
