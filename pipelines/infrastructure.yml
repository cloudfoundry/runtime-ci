---
groups:
- name: fresh
  jobs:
  - add-claimed-lock-fresh
  - setup-infrastructure-fresh
  - update-infrastructure-fresh
  - destroy-infrastructure-fresh
  - remove-claimed-lock-fresh

- name: lite
  jobs:
  - add-claimed-lock-lite
  - setup-infrastructure-lite
  - destroy-infrastructure-lite
  - update-infrastructure-lite
  - remove-claimed-lock-lite

- name: upgrade
  jobs:
  - add-claimed-lock-upgrade
  - setup-infrastructure-upgrade
  - update-infrastructure-upgrade
  - destroy-infrastructure-upgrade
  - remove-claimed-lock-upgrade

- name: stable
  jobs:
  - add-claimed-lock-stable
  - setup-infrastructure-stable
  - update-infrastructure-stable
  - destroy-infrastructure-stable
  - remove-claimed-lock-stable

- name: experimental
  jobs:
  - add-claimed-lock-experimental
  - setup-infrastructure-experimental
  - update-infrastructure-experimental
  - destroy-infrastructure-experimental
  - remove-claimed-lock-experimental

- name: cats
  jobs:
  - add-claimed-lock-cats
  - setup-infrastructure-cats
  - update-infrastructure-cats
  - destroy-infrastructure-cats
  - remove-claimed-lock-cats

- name: bbr
  jobs:
  - add-claimed-lock-bbr
  - setup-infrastructure-bbr
  - update-infrastructure-bbr
  - destroy-infrastructure-bbr
  - remove-claimed-lock-bbr

- name: exploratory
  jobs:
  - setup-infrastructure-hagrid
  - destroy-infrastructure-hagrid
  - setup-infrastructure-maxime
  - destroy-infrastructure-maxime

resources:
# Pools
- name: fresh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: lite-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: upgrade-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: stable-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: experimental-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/experimental
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: cats-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cats
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: bbr-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: bbr
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

# Plan patches
- name: bosh-bootloader
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader

# Code repos
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

# Env repos
- name: bellatrix-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bellatrix-env.git
    private_key: ((bellatrix_env_readwrite_deploy_key.private_key))
    paths:
    - bbl-state
    - bbl-config

- name: hagrid-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hagrid-env.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

- name: maxime-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/maxime-env.git
    private_key: ((maxime_env_readwrite_deploy_key.private_key))

- name: hermione-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: ((hermione_env_readwrite_deploy_key.private_key))
    paths:
    - bbl-state
    - bbl-config

- name: luna-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: ((luna_env_readwrite_deploy_key.private_key))
    paths:
    - bbl-state

- name: snitch-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: ((snitch_env_readwrite_deploy_key.private_key))

- name: trelawney-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: ((trelawney_env_readwrite_deploy_key.private_key))
    paths:
    - bbl-state
    - bbl-config

- name: cats-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cats-env.git
    private_key: ((cats_env_readwrite_deploy_key.private_key))

- name: baba-yaga-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/baba-yaga-env.git
    private_key: ((baba_yaga_env_readwrite_deploy_key.private_key))
    paths:
    - bbl-state
    - bbl-config

# Time
- name: every-tuesday-morning
  type: time
  source:
    start: 4:20
    stop: 4:50
    interval: 24h
    days: [ Tuesday ]
    location: America/Los_Angeles

- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h

jobs:
# Add claimed locks
- name: add-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {add_claimed: fresh-pool}

- name: add-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {add_claimed: lite-pool}

- name: add-claimed-lock-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {add_claimed: upgrade-pool}

- name: add-claimed-lock-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {add_claimed: stable-pool}

- name: add-claimed-lock-experimental
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: experimental-pool
  - put: experimental-pool
    params: {add_claimed: experimental-pool}

- name: add-claimed-lock-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: cats
    output_mapping:
      pool-resource: cats-pool
  - put: cats-pool
    params: {add_claimed: cats-pool}

- name: add-claimed-lock-bbr
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: baba-yaga
    output_mapping:
      pool-resource: bbr-pool
  - put: bbr-pool
    params: {add_claimed: bbr-pool}

# Setup infrastructure
- name: setup-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: fresh-pool
    trigger: true
    passed: [ add-claimed-lock-fresh ]
  - aggregate:
    - get: luna-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_ENV_NAME: luna-fresh
      BBL_CONFIG_DIR: plan-patches/iso-segs-gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      # This is us-west1 because the bbl isoseg patch has us-west1 hardcoded
      BBL_GCP_REGION: us-west1
      BBL_IAAS: gcp
      BBL_LB_CERT: ((luna_cf_lb_cert.certificate))
      BBL_LB_KEY: ((luna_cf_lb_cert.private_key))
      LB_DOMAIN: luna.cf-app.com
    input_mapping:
      bbl-state: luna-env-director-state
      bbl-config: bosh-bootloader
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: fresh-pool
    params: {release: fresh-pool}

- name: setup-infrastructure-hagrid
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: hagrid-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_CONFIG_DIR: bbl-config
      BBL_STATE_DIR: bbl-state
      BBL_ENV_NAME: hagrid-fresh
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_IAAS: gcp
      BBL_LB_CERT: ((hagrid_cf_lb_cert.certificate))
      BBL_LB_KEY: ((hagrid_cf_lb_cert.private_key))
      LB_DOMAIN: hagrid.relint.rocks
    input_mapping:
      bbl-state: hagrid-env-director-state
      bbl-config: hagrid-env-director-state
    ensure:
      put: hagrid-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-maxime
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: maxime-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_STATE_DIR: bbl-state
      BBL_CONFIG_DIR: plan-patches/network-lb-gcp
      BBL_ENV_NAME: maxime-explore
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_IAAS: gcp
      BBL_LB_CERT: ((maxime_cf_ssl_cert.certificate))
      BBL_LB_KEY: ((maxime_cf_ssl_cert.private_key))
      LB_DOMAIN: maxime.cf-app.com
    input_mapping:
      bbl-state: maxime-env-director-state
      bbl-config: bosh-bootloader
    ensure:
      put: maxime-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: lite-pool
    trigger: true
    passed: [ add-claimed-lock-lite ]
  - aggregate:
    - get: snitch-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
    - get: runtime-ci
  - task: combine-bbl-configs
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: bosh-bootloader
      second-input: snitch-env-director-state
    params:
      FIRST_DIR: plan-patches/bosh-lite-gcp
      SECOND_DIR: bbl-config
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
      bbl-config: combined-inputs
    params:
      BBL_CONFIG_DIR: .
      BBL_ENV_NAME: snitch-lite
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_IAAS: gcp
      SKIP_LB_CREATION: true
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: lite-pool
    params: {release: lite-pool}

- name: setup-infrastructure-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: upgrade-pool
    trigger: true
    passed: [add-claimed-lock-upgrade]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: trelawney-env-director-state
    - get: runtime-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((trelawney_cf_lb_cert.certificate))
      BBL_LB_KEY: ((trelawney_cf_lb_cert.private_key))
      LB_DOMAIN: trelawney.cf-app.com
      BBL_CONFIG_DIR: bbl-config
      BBL_ENV_NAME: trelawney-upgrade
    input_mapping:
      bbl-state: trelawney-env-director-state
      bbl-config: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: setup-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: stable-pool
    trigger: true
    passed: [ add-claimed-lock-stable ]
  - aggregate:
    - get: bellatrix-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: bosh-bootloader
  - task: combine-bbl-plan-patches
    file: runtime-ci/tasks/combine-inputs/task.yml
    input_mapping:
      first-input: bellatrix-env-director-state
      second-input: bosh-bootloader
    params:
      FIRST_DIR: bbl-config
      SECOND_DIR: plan-patches/network-lb-gcp
    output_mapping:
      combined-inputs: combined-plan-patches
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((bellatrix_cf_lb_cert.certificate))
      BBL_LB_KEY: ((bellatrix_cf_lb_cert.private_key))
      LB_DOMAIN: bellatrix.cf-app.com
      BBL_ENV_NAME: bellatrix-stable
      BBL_CONFIG_DIR: .
    input_mapping:
      bbl-state: bellatrix-env-director-state
      bbl-config: combined-plan-patches
    ensure:
      put: bellatrix-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: stable-pool
    params: {release: stable-pool}

- name: setup-infrastructure-experimental
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: experimental-pool
    trigger: true
    passed: [ add-claimed-lock-experimental ]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: hermione-env-director-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
      LB_DOMAIN: hermione.cf-app.com
      BBL_ENV_NAME: hermione-experimental
    input_mapping:
      bbl-state: hermione-env-director-state
      bbl-config: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: experimental-pool
    params: {release: experimental-pool}

- name: setup-infrastructure-cats
  serial_groups: [cats]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cats-pool
    trigger: true
    passed: [ add-claimed-lock-cats ]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: cats-env-director-state
    - get: bosh-bootloader
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((cats_cf_lb_cert.certificate))
      BBL_LB_KEY: ((cats_cf_lb_cert.private_key))
      LB_DOMAIN: cats.cf-app.com
      BBL_CONFIG_DIR: plan-patches/network-lb-gcp
      BBL_ENV_NAME: cats
    input_mapping:
      bbl-state: cats-env-director-state
      bbl-config: bosh-bootloader
    ensure:
      put: cats-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: cats-pool
    params: {release: cats-pool}

- name: setup-infrastructure-bbr
  serial_groups: [bbr]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: bbr-pool
    trigger: true
    passed: [add-claimed-lock-bbr]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: baba-yaga-env-director-state
    - get: bosh-bootloader
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((baba_yaga_cf_lb_cert.certificate))
      BBL_LB_KEY: ((baba_yaga_cf_lb_cert.private_key))
      LB_DOMAIN: baba-yaga.cf-app.com
      BBL_ENV_NAME: baba-yaga-bbr
      BBL_CONFIG_DIR: plan-patches/network-lb-gcp
    input_mapping:
      bbl-state: baba-yaga-env-director-state
      bbl-config: bosh-bootloader
    ensure:
      put: baba-yaga-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: bbr-pool
    params: {release: bbr-pool}

# Update infrastructure
- name: update-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: fresh-pool
        params: {acquire: true}
      - get: luna-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_CONFIG_DIR: plan-patches/iso-segs-gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        # This is us-west1 because the bbl isoseg patch has us-west1 hardcoded
        BBL_GCP_REGION: us-west1
        BBL_LB_CERT: ((luna_cf_lb_cert.certificate))
        BBL_LB_KEY: ((luna_cf_lb_cert.private_key))
        LB_DOMAIN: luna.cf-app.com
      input_mapping:
        bbl-state: luna-env-director-state
        bbl-config: bosh-bootloader
      ensure:
        put: luna-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: fresh-pool
      params: {release: fresh-pool}

- name: update-infrastructure-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: lite-pool
        params: {acquire: true}
      - get: snitch-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: runtime-ci
      - get: every-tuesday-morning
        trigger: true
    - task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state
    - task: combine-bbl-configs
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: bosh-bootloader
        second-input: snitch-env-director-state
      params:
        FIRST_DIR: plan-patches/bosh-lite-gcp
        SECOND_DIR: bbl-config
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_ENV_NAME: snitch-lite
        SKIP_LB_CREATION: true
        BBL_CONFIG_DIR: .
      input_mapping:
        bbl-state: snitch-env-director-state
        bbl-config: combined-inputs
      ensure:
        put: snitch-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: lite-pool
      params: {release: lite-pool}

- name: update-infrastructure-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: upgrade-pool
        params: {acquire: true}
      - get: trelawney-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
      - get: runtime-ci
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((trelawney_cf_lb_cert.certificate))
        BBL_LB_KEY: ((trelawney_cf_lb_cert.private_key))
        BBL_CONFIG_DIR: bbl-config
        LB_DOMAIN: trelawney.cf-app.com
      input_mapping:
        bbl-state: trelawney-env-director-state
        bbl-config: trelawney-env-director-state
      ensure:
        put: trelawney-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: upgrade-pool
      params: {release: upgrade-pool}

- name: update-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: stable-pool
        params: {acquire: true}
      - get: bellatrix-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
      - get: runtime-ci
      - get: bosh-bootloader
    - task: combine-bbl-plan-patches
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: bellatrix-env-director-state
        second-input: bosh-bootloader
      params:
        FIRST_DIR: bbl-config
        SECOND_DIR: plan-patches/network-lb-gcp
      output_mapping:
        combined-inputs: combined-plan-patches
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((bellatrix_cf_lb_cert.certificate))
        BBL_LB_KEY: ((bellatrix_cf_lb_cert.private_key))
        LB_DOMAIN: bellatrix.cf-app.com
        BBL_CONFIG_DIR: .
      input_mapping:
        bbl-state: bellatrix-env-director-state
        bbl-config: combined-plan-patches
      ensure:
        put: bellatrix-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: stable-pool
      params: {release: stable-pool}

- name: update-infrastructure-experimental
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: experimental-pool
        params: {acquire: true}
      - get: hermione-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: aws
        BBL_AWS_REGION: us-west-2
        BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
        BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
        LB_DOMAIN: hermione.cf-app.com
        BBL_CONFIG_DIR: bbl-config
      input_mapping:
        bbl-state: hermione-env-director-state
        bbl-config: hermione-env-director-state
      ensure:
        put: hermione-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: experimental-pool
      params: {release: experimental-pool}

- name: update-infrastructure-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: cats-pool
        params: {acquire: true}
      - get: cats-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((cats_cf_lb_cert.certificate))
        BBL_LB_KEY: ((cats_cf_lb_cert.private_key))
        LB_DOMAIN: cats.cf-app.com
        BBL_CONFIG_DIR: plan-patches/network-lb-gcp
        BBL_ENV_NAME: cats
      input_mapping:
        bbl-state: cats-env-director-state
        bbl-config: bosh-bootloader
      ensure:
        put: cats-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: cats-pool
      params: {release: cats-pool}

- name: update-infrastructure-bbr
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 12h
    do:
    - aggregate:
      - put: bbr-pool
        params: {acquire: true}
      - get: baba-yaga-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: bosh-bootloader
      - get: every-tuesday-morning
        trigger: true
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((baba_yaga_cf_lb_cert.certificate))
        BBL_LB_KEY: ((baba_yaga_cf_lb_cert.private_key))
        LB_DOMAIN: baba-yaga.cf-app.com
        BBL_ENV_NAME: baba-yaga-bbr
        BBL_CONFIG_DIR: plan-patches/network-lb-gcp
      input_mapping:
        bbl-state: baba-yaga-env-director-state
        bbl-config: bosh-bootloader
      ensure:
        put: baba-yaga-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true
    - put: bbr-pool
      params: {release: bbr-pool}

# Destroy infrastructure
- name: destroy-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: fresh-pool
      params: {claim: luna}
    - get: luna-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: lite-pool
      params: {claim: snitch}
    - get: snitch-env-director-state
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: snitch-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: upgrade-pool
      params: {claim: trelawney}
    - get: trelawney-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: trelawney-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: stable-pool
      params: {claim: bellatrix}
    - get: bellatrix-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bellatrix-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: bellatrix-env-director-state
    ensure:
      put: bellatrix-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-experimental
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: experimental-pool
      params: {claim: hermione}
    - get: hermione-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
    input_mapping:
      bbl-state: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-cats
  serial_groups: [cats]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: cats-pool
      params: {claim: cats}
    - get: cats-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: cats-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: cats-env-director-state
    ensure:
      put: cats-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-bbr
  serial_groups: [bbr]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: bbr-pool
      params: {claim: baba-yaga}
    - get: baba-yaga-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: baba-yaga-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: baba-yaga-env-director-state
    ensure:
      put: baba-yaga-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-hagrid
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: hagrid-env-director-state
    - get: cf-deployment-concourse-tasks
  - try:
      task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: hagrid-env-director-state
  - try:
      task: destroy-infrastructure
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      input_mapping:
        bbl-state: hagrid-env-director-state
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      ensure:
        put: hagrid-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true

- name: destroy-infrastructure-maxime
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: maxime-env-director-state
    - get: cf-deployment-concourse-tasks
  - try:
      task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: maxime-env-director-state
  - try:
      task: destroy-infrastructure
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      input_mapping:
        bbl-state: maxime-env-director-state
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      ensure:
        put: maxime-env-director-state
        params:
          repository: updated-bbl-state
          rebase: true

# Remove claimed locks
- name: remove-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: fresh-pool
    passed: [ destroy-infrastructure-fresh ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {remove: fresh-pool}

- name: remove-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: lite-pool
    passed: [ destroy-infrastructure-lite ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {remove: lite-pool}

- name: remove-claimed-lock-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: upgrade-pool
    passed: [ destroy-infrastructure-upgrade ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {remove: upgrade-pool}

- name: remove-claimed-lock-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: stable-pool
    passed: [ destroy-infrastructure-stable ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {remove: stable-pool}

- name: remove-claimed-lock-experimental
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: experimental-pool
    passed: [ destroy-infrastructure-experimental ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: experimental-pool
  - put: experimental-pool
    params: {remove: experimental-pool}

- name: remove-claimed-lock-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: cats-pool
    passed: [ destroy-infrastructure-cats ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: cats
    output_mapping:
      pool-resource: cats-pool
  - put: cats-pool
    params: {remove: cats-pool}

- name: remove-claimed-lock-bbr
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: bbr-pool
    passed: [destroy-infrastructure-bbr]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: baba-yaga
    output_mapping:
      pool-resource: bbr-pool
  - put: bbr-pool
    params: {remove: bbr-pool}
